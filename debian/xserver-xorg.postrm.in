#!/bin/sh
# Debian xserver-xorg package post-removal script
# Copyright 1998--2001, 2003 Branden Robinson.
# Licensed under the GNU General Public License, version 2.  See the file
# /usr/share/common-licenses/GPL or <http://www.gnu.org/copyleft/gpl.txt>.
# Acknowledgements to Stephen Early, Mark Eichin, and Manoj Srivastava.


set -e

THIS_PACKAGE=xserver-xorg
THIS_SCRIPT=postrm

#INCLUDE_SHELL_LIB#

CONFIG_DIR=/etc/X11
SERVER_SYMLINK="$CONFIG_DIR/X"
XF86CONFIG="$CONFIG_DIR/XF86Config-4"
XORGCONFIG="$CONFIG_DIR/xorg.conf"
CONFIG_AUX_DIR=/var/lib/x11
SERVER_SYMLINK_CHECKSUM="$CONFIG_AUX_DIR/${SERVER_SYMLINK##*/}.md5sum"
SERVER_SYMLINK_ROSTER="$CONFIG_AUX_DIR/${SERVER_SYMLINK##*/}.roster"
XF86CONFIG_CHECKSUM="$CONFIG_AUX_DIR/${XF86CONFIG##*/}.md5sum"
XORGCONFIG_CHECKSUM="$CONFIG_AUX_DIR/${XORGCONFIG##*/}.md5sum"
XF86CONFIG_ROSTER="$CONFIG_AUX_DIR/${XF86CONFIG##*/}.roster"
XORGCONFIG_ROSTER="$CONFIG_AUX_DIR/${XORGCONFIG##*/}.roster"
THIS_SERVER=/usr/bin/Xorg

# clean up non-conffile configuration files and related materials on purge
if [ "$1" = "purge" ]; then
  # de-register this file as a handler of the X server symlink
  if [ -e "$SERVER_SYMLINK_ROSTER" ]; then
    # check existing roster file for our package name
    if fgrep -qx "$THIS_PACKAGE" "$SERVER_SYMLINK_ROSTER"; then
      # construct temporary roster file with our package name removed, ignoring
      # failure
      fgrep -vx "$THIS_PACKAGE" "$SERVER_SYMLINK_ROSTER" > \
        "$SERVER_SYMLINK_ROSTER.dpkg-tmp" || true
      # is there anything left?
      if [ -s "$SERVER_SYMLINK_ROSTER.dpkg-tmp" ]; then
        # yes, replace the roster file
        mv "$SERVER_SYMLINK_ROSTER.dpkg-tmp" "$SERVER_SYMLINK_ROSTER"
      else
        # no; remove both the roster and our temporary copy
        rm -f "$SERVER_SYMLINK_ROSTER" "$SERVER_SYMLINK_ROSTER.dpkg-tmp"
        # remove the X server symlink if it was still managed by the package
        if [ -e "$SERVER_SYMLINK_CHECKSUM" ]; then
          # does it exist?
          if [ -e "$SERVER_SYMLINK" ]; then
            # does the current MD5 checksum match the stored checksum?
            if [ "$(readlink "$SERVER_SYMLINK" | md5sum)" \
                 = "$(cat "$SERVER_SYMLINK_CHECKSUM")" ]; then
              # yes; remove the symlink
              rm -f "$SERVER_SYMLINK"
            fi
          fi
          # remove the checksum file; any remaining X server symlink still on
          # the system at this point is no longer being managed (local user
          # customization)
          rm -f "$SERVER_SYMLINK_CHECKSUM"
        fi
      fi
    fi
  fi

  # de-register this file as a handler of the Xorg 4.x X server configuration
  # file
  if [ -e "$XORGCONFIG_ROSTER" ]; then
    # check existing roster file for our package name
    if fgrep -qx "$THIS_PACKAGE" "$XORGCONFIG_ROSTER"; then
      # construct temporary roster file with our package name removed, ignoring
      # failure
      fgrep -vx "$THIS_PACKAGE" "$XORGCONFIG_ROSTER" > \
        "$XORGCONFIG_ROSTER.dpkg-tmp" || true
      # is there anything left?
      if [ -s "$XORGCONFIG_ROSTER.dpkg-tmp" ]; then
        # yes, replace the roster file
        mv "$XORGCONFIG_ROSTER.dpkg-tmp" "$XORGCONFIG_ROSTER"
      else
        # no; remove both the roster and our temporary copy
        rm -f "$XORGCONFIG_ROSTER" "$XORGCONFIG_ROSTER.dpkg-tmp"
        # remove Xorg X server configuration file if it was still
        # managed by the package
        if [ -e "$XORGCONFIG_CHECKSUM" ]; then
          # does it exist?
          if [ -e "$XORGCONFIG" ]; then
            # does the current MD5 checksum match the stored checksum?
            if [ "$(md5sum "$XORGCONFIG")" \
                 = "$(cat "$XORGCONFIG_CHECKSUM")" ]; then
              # yes; remove the config file
              rm -f "$XORGCONFIG"
            fi
          fi
          # remove the checksum file; any remaining XFree86 4.x X server
          # configuration file still on the system at this point is no longer
          # being managed (local user customization)
          rm -f "$XORGCONFIG_CHECKSUM"
        fi
      fi
    fi
  fi

  for DIR in "$CONFIG_DIR" "$CONFIG_AUX_DIR"; do
      rmdir "$DIR" 2> /dev/null || true
  done
fi

#DEBHELPER#

exit 0

# vim:set ai et sts=2 sw=2 tw=0:
